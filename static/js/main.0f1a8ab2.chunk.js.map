{"version":3,"sources":["components/Spinner.js","components/Story/Story.js","api-helper.js","api-config.js","hooks/use-http.js","components/StoriesList/StoriesList.js","components/AddStory/NavButtons/NavButton.js","components/AddStory/NavButtons/NavButtons.js","components/AddStory/control-validation.js","components/AddStory/ImgList/ImgList.js","components/AddStory/Form/Input.js","components/AddStory/Form/Form.js","components/AddStory/AddStory.js","App.js","index.js","components/AddStory/ImgList/ImgList.module.css","components/AddStory/NavButtons/NavButtons.module.css","components/Story/Story.module.css","components/AddStory/AddStory.module.css","components/StoriesList/StoriesList.module.css","App.module.css"],"names":["Spinner","type","style","padding","color","height","width","Story","props","Card","className","preview","classes","previewStory","story","CardMedia","media","image","title","CardContent","content","Typography","gutterBottom","variant","component","author","description","unsplash","createApi","accessKey","getRandomImgs","searchTerm","a","result","search","getPhotos","query","response","results","forEach","img","push","id","url","urls","regular","console","log","useHttp","useState","isLoading","setIsLoading","error","setError","sendRequest","useCallback","requestConfig","applyData","fetch","method","headers","body","JSON","stringify","ok","Error","json","data","message","restartReq","StoriesList","onFetchStories","get","loadStories","storiesObj","loadedStories","key","reverse","useEffect","stories","length","map","Button","startIcon","onClick","NavButton","isNext","move","buttonCon","buttonText","Fab","backgroundColor","NavButtons","currentStep","steps","onError","moveHandler","action","makeMove","stepValue","nextIdx","indexOf","onStepChange","isError","onStepValidation","setTimeout","window","scrollTo","isFirstStep","isLsatStep","navStyle","justifyContent","navigationButtons","regex","containSpecialChars","RegExp","containDigit","ImgList","searchRef","useRef","loaded","setLoaded","imgs","setImgs","searchInputShown","setSearchInputShown","onSearch","setOnSearch","onImageChoice","gotResults","changeImgHandler","term","primaryButtonProps","optionalImgsCon","display","searchBox","TextField","inputRef","label","imgsListText","searchValue","current","value","onSearchHandler","ImageList","rowHeight","screenWidth","optionalImgs","cols","imgClassName","chosenImg","ImageListItem","chooseImgHandler","includes","onLoad","prevLoaded","src","alt","Input","isDescription","name","isMobile","standartWidth","descriptionWidth","inputProps","InputLabelProps","fontSize","InputProps","onChange","event","update","onBlur","marginTop","rows","multiline","Form","inputs","onSubmit","reqLoading","reqError","authorStep","titleStep","imageStep","descriptionStep","finishStep","textInputsSteps","imageInputDisplay","isLastStep","step","updateInput","final","initialInputsState","AddStory","postBarShown","setPostBarShown","setCurrentStep","inputsState","setInputsState","post","createTask","storyData","generatedId","createdStory","onAddStory","restart","onImageChoiceHandler","prevState","errorHandler","postBar","postBarContent","preventDefault","postFunc","createFunc","bind","postStory","target","eventName","_reactName","stepName","filter","onStepChangeHandler","trimmedValue","trim","test","validateControl","alignSelf","postToggleButton","App","setStories","innerWidth","clientWidth","setClientWidth","updateDimensions","addEventListener","removeEventListener","onFetchStoriesHandler","Fragment","formError","prevStories","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0f1a8ab2.chunk.js","sourcesContent":["import Loader from 'react-loader-spinner';\r\nimport React from 'react';\r\nconst Spinner = () => {\r\n  return (\r\n    <Loader\r\n      type=\"Oval\"\r\n      style={{ padding: '5%' }}\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { CardContent, CardMedia, Typography } from '@material-ui/core';\nimport classes from './Story.module.css';\n\nfunction Story(props) {\n  return (\n    <Card className={props.preview ? classes.previewStory : classes.story}>\n      <CardMedia\n        className={classes.media}\n        image={props.image}\n        title={props.title}\n      />\n      <CardContent className={classes.content}>\n        <Typography gutterBottom variant=\"h2\" component=\"h2\">\n          {props.title}\n        </Typography>\n        <Typography gutterBottom variant=\"h3\" component=\"h3\">\n          By {props.author}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.description}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\nexport default Story;\n","import { createApi } from 'unsplash-js';\r\nimport { UNSPLASH_API_KEY } from './api-config';\r\nconst unsplash = createApi({\r\n  accessKey: UNSPLASH_API_KEY,\r\n});\r\n\r\nexport const getRandomImgs = async (searchTerm) => {\r\n  let result = [];\r\n  try {\r\n    const imgsData = await unsplash.search.getPhotos({\r\n      query: searchTerm,\r\n    });\r\n    imgsData.response.results.forEach((img) => {\r\n      result.push({ id: img.id, url: img.urls.regular });\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getStories = (getFunc, transformFunc) => {\r\n  getFunc(\r\n    {\r\n      url: 'https://react-http-de690-default-rtdb.firebaseio.com/stories.json',\r\n    },\r\n    transformFunc\r\n  );\r\n};\r\n\r\nexport const postStory = (postFunc, createFunc, story) => {\r\n  postFunc(\r\n    {\r\n      url: 'https://react-http-de690-default-rtdb.firebaseio.com/stories.json',\r\n      method: 'POST',\r\n      body: story,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n    createFunc.bind(null, story)\r\n  );\r\n};\r\n","export const UNSPLASH_API_KEY = '0oJhi_V8eHNlNtyOLjykytXjPWxFd79JZ7FWUduq0vk';\r\n","import { useCallback, useState } from 'react';\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const restartReq = () => {\r\n    setError(null);\r\n    setIsLoading(false);\r\n  };\r\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(requestConfig.url, {\r\n        method: requestConfig.method ? requestConfig.method : 'GET',\r\n        headers: requestConfig.headers ? requestConfig.headers : {},\r\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Request failed!');\r\n      }\r\n      const data = await response.json();\r\n      applyData(data);\r\n    } catch (err) {\r\n      setError(err.message || 'Something went wrong!');\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return { sendRequest, error: error, isLoading: isLoading, restartReq };\r\n};\r\n\r\nexport default useHttp;\r\n","import React, { useCallback, useEffect } from 'react';\nimport Spinner from '../Spinner';\nimport Button from '@material-ui/core/Button';\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\nimport Story from '../Story/Story';\nimport classes from './StoriesList.module.css';\nimport { getStories } from '../../api-helper';\nimport useHttp from '../../hooks/use-http';\nconst StoriesList = (props) => {\n  const { onFetchStories } = props;\n  const { sendRequest: get, error, isLoading } = useHttp();\n  const loadStories = useCallback(() => {\n    const transformStories = (storiesObj) => {\n      const loadedStories = [];\n      for (const key in storiesObj) {\n        let story = storiesObj[key];\n        loadedStories.push({ id: key, ...story });\n      }\n      loadedStories.reverse();\n      onFetchStories(loadedStories);\n    };\n    getStories(get, transformStories);\n  }, [get, onFetchStories]);\n  useEffect(() => {\n    loadStories();\n  }, [loadStories]);\n\n  let content;\n  if (props.stories.length > 0) {\n    content = (\n      <>\n        <h2>Stories Wall</h2>\n        <ul className={classes['stories-list']}>\n          {props.stories.map((story) => (\n            <Story\n              key={story.id}\n              title={story.title}\n              author={story.author}\n              description={story.description}\n              image={story.image}\n            />\n          ))}\n        </ul>\n      </>\n    );\n  }\n  if (props.stories.length === 0) {\n    content = <p>Wall is empty!</p>;\n  }\n  if (error) {\n    content = (\n      <div>\n        <p>{error}</p>\n        <Button\n          startIcon={<SentimentDissatisfiedIcon />}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => loadStories()}\n        >\n          Try again\n        </Button>\n      </div>\n    );\n  }\n  if (isLoading) {\n    content = <Spinner />;\n  }\n\n  return content;\n};\n\nexport default StoriesList;\n","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport classes from './NavButtons.module.css';\r\nconst NavButton = (props) => {\r\n  const { isNext, error, move } = props;\r\n  return (\r\n    <div className={classes.buttonCon}>\r\n      {isNext && <span className={classes.buttonText}>Next</span>}\r\n      <Fab\r\n        color=\"primary\"\r\n        style={{ backgroundColor: error ? 'red' : null }}\r\n        onClick={() => move(isNext ? 'next' : 'back')}\r\n      >\r\n        {isNext ? <NavigateNextIcon /> : <NavigateBeforeIcon />}\r\n      </Fab>{' '}\r\n      {!isNext && <span className={classes.buttonText}>Back</span>}\r\n    </div>\r\n  );\r\n};\r\nexport default NavButton;\r\n///trim values before search img\r\n","import React from 'react';\r\nimport NavButton from './NavButton';\r\nimport classes from './NavButtons.module.css';\r\nconst NavButtons = (props) => {\r\n  const { currentStep, steps, error, onError } = props;\r\n  const moveHandler = (action) => {\r\n    function makeMove() {\r\n      const stepValue = action === 'next' ? 1 : -1;\r\n      const nextIdx = steps.indexOf(currentStep) + stepValue;\r\n      props.onStepChange(steps[nextIdx]);\r\n    }\r\n    props.onError(null);\r\n    if (action === 'next') {\r\n      let isError = props.onStepValidation(currentStep);\r\n      if (!isError) {\r\n        makeMove();\r\n      } else {\r\n        onError(isError);\r\n        setTimeout(() => {\r\n          onError(false);\r\n        }, 1500);\r\n      }\r\n    } else {\r\n      makeMove();\r\n    }\r\n    window.scrollTo(0, 0);\r\n  };\r\n  const isFirstStep = currentStep === steps[0];\r\n  const isLsatStep = currentStep === steps[steps.length - 1];\r\n  const navStyle = {\r\n    justifyContent: !isFirstStep ? 'space-between' : 'flex-end',\r\n  };\r\n\r\n  return (\r\n    <div className={classes.navigationButtons} style={navStyle}>\r\n      {!isFirstStep && (\r\n        <NavButton move={moveHandler} isNext={false} error={false} />\r\n      )}\r\n      {!isLsatStep && (\r\n        <NavButton move={moveHandler} isNext={true} error={error} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NavButtons;\r\n///trim values before search img\r\n","const regex = {\r\n  containSpecialChars: new RegExp(/[$&+,:;=?@#|'<>.^*()%!-]/),\r\n  containDigit: new RegExp(/\\d/),\r\n};\r\nexport const validateControl = (name, value) => {\r\n  let error = null;\r\n  if (name === 'image') {\r\n    if (value === null) {\r\n      error = 'Must choose an image';\r\n    }\r\n  } else {\r\n    const trimmedValue = value.trim();\r\n    switch (name) {\r\n      case 'author':\r\n        if (trimmedValue === '') {\r\n          error = 'Provide your name below';\r\n        } else if (\r\n          regex.containSpecialChars.test(trimmedValue) ||\r\n          regex.containDigit.test(trimmedValue)\r\n        ) {\r\n          error = 'Provide name without special chars or digits';\r\n        } else if (trimmedValue.length < 2) {\r\n          error = 'Name is too short.';\r\n        }\r\n        break;\r\n      case 'title':\r\n        if (trimmedValue === '') {\r\n          error = 'Provide title below';\r\n        }\r\n        break;\r\n      case 'description':\r\n        if (trimmedValue === '') {\r\n          error = 'Provide your story below.';\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  return error;\r\n};\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport classes from './ImgList.module.css';\r\nimport Spinner from '../../Spinner';\r\nimport { getRandomImgs } from '../../../api-helper';\r\nimport { Button, ImageList, ImageListItem, TextField } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nfunction ImgList(props) {\r\n  const searchRef = useRef();\r\n  const [loaded, setLoaded] = useState([]);\r\n  const [imgs, setImgs] = useState([]);\r\n  const [searchInputShown, setSearchInputShown] = useState(false);\r\n  const [onSearch, setOnSearch] = useState(false);\r\n  const { onImageChoice } = props;\r\n  const gotResults = imgs.length > 0;\r\n  const changeImgHandler = async (term) => {\r\n    setOnSearch(true);\r\n    setImgs([]);\r\n    setLoaded([]);\r\n    const imgs = await getRandomImgs(term);\r\n    setImgs(imgs);\r\n    setOnSearch(false);\r\n  };\r\n  useEffect(() => {\r\n    props.searchTerm && changeImgHandler(props.searchTerm);\r\n    onImageChoice(null);\r\n  }, [props.searchTerm, onImageChoice]);\r\n\r\n  const chooseImgHandler = (img) => {\r\n    props.onImageChoice(img);\r\n  };\r\n  const onImgLoadHandler = (id) => {\r\n    setLoaded((prevLoaded) => {\r\n      return [...prevLoaded, id];\r\n    });\r\n  };\r\n\r\n  const onSearchHandler = () => {\r\n    const searchValue = searchRef.current.value;\r\n    if (searchValue) {\r\n      changeImgHandler(searchValue);\r\n      onImageChoice(null);\r\n      setSearchInputShown(false);\r\n    }\r\n  };\r\n  const primaryButtonProps = { variant: 'contained', color: 'primary' };\r\n  const secButtonProps = { variant: 'contained', color: 'secondary' };\r\n  return (\r\n    <div className={classes.optionalImgsCon} style={{ display: props.display }}>\r\n      <div className={classes.searchBox}>\r\n        {searchInputShown && (\r\n          <TextField\r\n            inputRef={searchRef}\r\n            type=\"search\"\r\n            variant=\"outlined\"\r\n            label=\"search term..\"\r\n          />\r\n        )}\r\n        {gotResults && !searchInputShown && (\r\n          <span className={classes.imgsListText}>\r\n            Dont like this results? <br />\r\n          </span>\r\n        )}\r\n        <div className={classes.buttonCon}>\r\n          {!searchInputShown ? (\r\n            <Button\r\n              startIcon={<SearchIcon />}\r\n              {...primaryButtonProps}\r\n              onClick={() => setSearchInputShown(true)}\r\n            >\r\n              Click to search\r\n            </Button>\r\n          ) : (\r\n            <>\r\n              <Button {...primaryButtonProps} onClick={() => onSearchHandler()}>\r\n                Search\r\n              </Button>\r\n              <Button\r\n                {...secButtonProps}\r\n                onClick={() => setSearchInputShown(false)}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {gotResults ? (\r\n        <ImageList\r\n          rowHeight={props.screenWidth > 650 ? 260 : 160}\r\n          className={classes.optionalImgs}\r\n          cols={props.screenWidth > 650 ? 5 : 2}\r\n        >\r\n          {imgs.map((img) => {\r\n            const isChosen = props.chosenImg && props.chosenImg === img.id;\r\n            const imgClassName = isChosen ? classes.chosenImg : '';\r\n            return (\r\n              <ImageListItem className={imgClassName} key={img.id} cols={1}>\r\n                <img\r\n                  onClick={() => chooseImgHandler(img)}\r\n                  style={{\r\n                    display: loaded.includes(img.id) ? 'block' : 'none',\r\n                  }}\r\n                  onLoad={() => onImgLoadHandler(img.id)}\r\n                  src={img.url}\r\n                  alt={'gallery img'}\r\n                />\r\n                {!loaded.includes(img.id) && <Spinner />}\r\n              </ImageListItem>\r\n            );\r\n          })}\r\n        </ImageList>\r\n      ) : (\r\n        <span className={classes.imgsListText}>\r\n          {onSearch ? 'Searching...' : 'couldent find optional images.'}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImgList;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nconst Input = (props) => {\r\n  const isDescription = props.name === 'description';\r\n  const isMobile = props.screenWidth < 650;\r\n  const standartWidth = isMobile ? '90%' : '35%';\r\n  const descriptionWidth = isMobile ? '90%' : '50%';\r\n  const inputProps = {\r\n    InputLabelProps: { style: { fontSize: isMobile ? 15 : 22 } },\r\n    InputProps: { style: { fontSize: isMobile ? 25 : 45 } },\r\n    value: props.value,\r\n    type: 'text',\r\n    variant: 'filled',\r\n    label: props.label,\r\n    onChange: (event) => props.update(props.name, event),\r\n    onBlur: (event) => props.update(props.name, event),\r\n    style: {\r\n      marginTop: isMobile ? '10%' : '1%',\r\n      width: isDescription ? descriptionWidth : standartWidth,\r\n      display: props.current === props.name ? 'flex' : 'none',\r\n    },\r\n    rows: isDescription ? 5 : 1,\r\n  };\r\n  return isDescription ? (\r\n    <TextField {...inputProps} multiline />\r\n  ) : (\r\n    <TextField {...inputProps} />\r\n  );\r\n};\r\nexport default Input;\r\n///trim values before search img\r\n","import React from 'react';\r\nimport ImgList from '../ImgList/ImgList';\r\nimport Input from './Input';\r\nimport Story from '../../Story/Story';\r\nimport Button from '@material-ui/core/Button';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport Spinner from '../../Spinner';\r\n\r\nconst Form = (props) => {\r\n  const { currentStep, inputs, steps, onSubmit, reqLoading, reqError } = props;\r\n  const [authorStep, titleStep, imageStep, descriptionStep, finishStep] = steps;\r\n  const textInputsSteps = [authorStep, titleStep, descriptionStep];\r\n  const imageInputDisplay = currentStep === imageStep.name ? 'block' : 'none';\r\n  const isLastStep = currentStep === finishStep.name;\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      {textInputsSteps.map((step) => {\r\n        return (\r\n          <Input\r\n            key={step.name}\r\n            name={step.name}\r\n            current={currentStep}\r\n            label={step.label}\r\n            screenWidth={props.screenWidth}\r\n            update={props.updateInput}\r\n            value={inputs[step.name].current}\r\n          />\r\n        );\r\n      })}\r\n      <ImgList\r\n        display={imageInputDisplay}\r\n        chosenImg={inputs.image ? inputs.image.id : null}\r\n        onImageChoice={props.onImageChoice}\r\n        searchTerm={inputs.title.final}\r\n        screenWidth={props.screenWidth}\r\n      />\r\n\r\n      {isLastStep && (\r\n        <>\r\n          {!reqLoading && (\r\n            <Button\r\n              startIcon={\r\n                reqError ? <SentimentDissatisfiedIcon /> : <ThumbUpIcon />\r\n              }\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              {reqError ? 'try again' : 'Sure, Post It!'}\r\n            </Button>\r\n          )}\r\n          {reqError ? (\r\n            <b> {reqError} </b>\r\n          ) : !reqLoading ? (\r\n            <Story\r\n              preview={true}\r\n              title={inputs.title.final}\r\n              author={inputs.author.final}\r\n              description={inputs.description.final}\r\n              image={inputs.image.url}\r\n            />\r\n          ) : (\r\n            <Spinner />\r\n          )}\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default Form;\r\n","import React, { useCallback, useState } from 'react';\nimport classes from './AddStory.module.css';\nimport NavButtons from './NavButtons/NavButtons';\nimport { validateControl } from './control-validation';\nimport Button from '@material-ui/core/Button';\nimport Form from './Form/Form';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport CloseIcon from '@material-ui/icons/Close';\nimport useHttp from '../../hooks/use-http';\nimport { postStory } from '../../api-helper';\nconst initialInputsState = {\n  author: { current: '', final: null },\n  title: { current: '', final: null },\n  image: { url: null, id: null },\n  description: { current: '', final: null },\n};\nfunction AddStory(props) {\n  const steps = [\n    { name: 'author', title: 'Who are you?', label: 'Your name' },\n    { name: 'title', title: 'What is your story name?', label: 'Story title' },\n    { name: 'image', title: 'Which image describes it the most?' },\n    { name: 'description', title: 'So,what happen?', label: 'Your story' },\n    { name: 'finish', title: 'Is that OK?' },\n  ];\n  const [postBarShown, setPostBarShown] = useState(false);\n  const [currentStep, setCurrentStep] = useState(steps[0]);\n  const [inputsState, setInputsState] = useState(initialInputsState);\n  // prettier-ignore\n  const { sendRequest: post, error: reqError,isLoading,restartReq} = useHttp();\n  const createTask = (story, storyData) => {\n    const generatedId = storyData.name;\n    const createdStory = { id: generatedId, ...story };\n    props.onAddStory(createdStory);\n    restart();\n  };\n  function submitHandler(event) {\n    event.preventDefault();\n    const story = {\n      author: inputsState.author.final,\n      title: inputsState.title.final,\n      description: inputsState.description.final,\n      image: inputsState.image.url,\n    };\n    postStory(post, createTask, story);\n  }\n  const restart = () => {\n    setInputsState(initialInputsState);\n    setCurrentStep(steps[0]);\n    setPostBarShown(false);\n    restartReq();\n  };\n\n  const onImageChoiceHandler = useCallback((img) => {\n    setInputsState((prevState) => {\n      return {\n        ...prevState,\n        image: img,\n      };\n    });\n  }, []);\n\n  const updateInputHandler = (name, event) => {\n    let value = event.target.value;\n    let eventName = event._reactName;\n    setInputsState((prevState) => {\n      let update;\n      if (eventName === 'onChange') {\n        update = { ...prevState[name], current: value };\n      } else if (eventName === 'onBlur') {\n        update = { ...prevState[name], final: value };\n      }\n      return {\n        ...prevState,\n        [name]: update,\n      };\n    });\n    errorHandler(null);\n  };\n  const togglePostBarHandler = () => {\n    postBarShown ? restart() : setPostBarShown((prevState) => !prevState);\n  };\n  const onStepChangeHandler = (stepName) => {\n    const step = steps.filter((step) => step.name === stepName)[0];\n    setCurrentStep(step);\n  };\n  const onStepValidationHandler = (name) => {\n    const checkValue =\n      name === 'image' ? inputsState.image : inputsState[name].current;\n    let result = validateControl(name, checkValue);\n    return result;\n  };\n  const errorHandler = (error) => {\n    props.onError(error);\n  };\n  return (\n    <div className={classes.postBar}>\n      {postBarShown && (\n        <div className={classes.postBarContent}>\n          <h2>{currentStep.title}</h2>\n\n          <Form\n            currentStep={currentStep.name}\n            inputs={inputsState}\n            steps={steps}\n            onSubmit={submitHandler}\n            updateInput={updateInputHandler}\n            onImageChoice={onImageChoiceHandler}\n            screenWidth={props.screenWidth}\n            reqLoading={isLoading}\n            reqError={reqError}\n          />\n          <NavButtons\n            currentStep={currentStep.name}\n            steps={steps.map((step) => step.name)}\n            onStepChange={(stepName) => onStepChangeHandler(stepName)}\n            onStepValidation={onStepValidationHandler}\n            onError={errorHandler}\n            error={props.error}\n          />\n        </div>\n      )}\n      <Button\n        style={{ alignSelf: postBarShown ? 'flex-start ' : 'center' }}\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.postToggleButton}\n        onClick={togglePostBarHandler}\n        startIcon={!postBarShown ? <WhatshotIcon /> : <CloseIcon />}\n      >\n        {!postBarShown ? 'Post your story' : 'Cancel'}\n      </Button>\n    </div>\n  );\n}\nexport default AddStory;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport StoriesList from './components/StoriesList/StoriesList';\nimport AddStory from './components/AddStory/AddStory';\nimport classes from './App.module.css';\nfunction App() {\n  const [stories, setStories] = useState([]);\n  const [clientWidth, setClientWidth] = useState(window.innerWidth);\n  const [error, setError] = useState(null);\n\n  const updateDimensions = () => {\n    setClientWidth(window.innerWidth);\n  };\n  useEffect(() => {\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  const onAddStoryHandler = (story) => {\n    setStories((prevStories) => {\n      return [story, ...prevStories];\n    });\n  };\n  const onFetchStoriesHandler = useCallback((stories) => {\n    setStories(stories);\n  }, []);\n  return (\n    <React.Fragment>\n      <section>\n        {error ? (\n          <p className={classes.formError}>{error}</p>\n        ) : (\n          <h1>Wall to all </h1>\n        )}\n      </section>\n      <section>\n        <AddStory\n          screenWidth={clientWidth}\n          onError={setError}\n          onAddStory={onAddStoryHandler}\n        />\n      </section>\n      <section>\n        <StoriesList onFetchStories={onFetchStoriesHandler} stories={stories} />\n      </section>\n    </React.Fragment>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionalImgsCon\":\"ImgList_optionalImgsCon__2YE6M\",\"optionalImgs\":\"ImgList_optionalImgs__3mtgb\",\"chosenImg\":\"ImgList_chosenImg__19cJS\",\"searchBox\":\"ImgList_searchBox__3OGjD\",\"buttonCon\":\"ImgList_buttonCon__2C0oN\",\"imgsListText\":\"ImgList_imgsListText__xSB2_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationButtons\":\"NavButtons_navigationButtons__1uNHt\",\"buttonCon\":\"NavButtons_buttonCon__1i5A0\",\"buttonText\":\"NavButtons_buttonText__3nZW1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"story\":\"Story_story__1bVPs\",\"previewStory\":\"Story_previewStory__3Yfo_\",\"content\":\"Story_content__vwEig\",\"media\":\"Story_media__VHaO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postToggleButton\":\"AddStory_postToggleButton__9NIuE\",\"postBar\":\"AddStory_postBar__218Sl\",\"postBarContent\":\"AddStory_postBarContent__2KZHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stories-list\":\"StoriesList_stories-list__2_DO6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formError\":\"App_formError__3DF59\"};"],"sourceRoot":""}