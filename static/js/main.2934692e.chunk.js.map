{"version":3,"sources":["components/Spinner.js","components/Story/Story.js","components/StoriesList/StoriesList.js","components/AddStory/NavButtons/NavButton.js","components/AddStory/NavButtons/NavButtons.js","components/AddStory/control-validation.js","api-helper.js","api-config.js","components/AddStory/ImgList/ImgList.js","components/AddStory/Form/Input.js","components/AddStory/Form/Form.js","components/AddStory/AddStory.js","App.js","index.js","components/AddStory/ImgList/ImgList.module.css","components/AddStory/NavButtons/NavButtons.module.css","components/Story/Story.module.css","components/AddStory/AddStory.module.css","components/StoriesList/StoriesList.module.css"],"names":["Spinner","type","style","padding","color","height","width","Story","props","Card","className","preview","classes","previewStory","story","CardMedia","media","image","title","CardContent","content","Typography","gutterBottom","variant","component","author","description","StoriesList","stories","map","id","NavButton","isNext","error","move","buttonCon","buttonText","Fab","backgroundColor","onClick","NavButtons","currentStep","steps","onError","moveHandler","action","makeMove","stepValue","nextIdx","indexOf","onStepChange","isError","onStepValidation","setTimeout","window","scrollTo","isFirstStep","isLsatStep","length","navStyle","justifyContent","navigationButtons","regex","containSpecialChars","RegExp","containDigit","unsplash","createApi","accessKey","getRandomImgs","searchTerm","a","result","search","getPhotos","query","response","results","forEach","img","push","url","urls","regular","console","log","ImgList","searchRef","useRef","useState","loaded","setLoaded","imgs","setImgs","searchInputShown","setSearchInputShown","onSearch","setOnSearch","onImageChoice","gotResults","changeImgHandler","term","useEffect","primaryButtonProps","optionalImgsCon","display","searchBox","TextField","inputRef","label","imgsListText","Button","searchValue","current","value","onSearchHandler","startIcon","ImageList","rowHeight","screenWidth","optionalImgs","cols","imgClassName","chosenImg","ImageListItem","chooseImgHandler","includes","onLoad","prevLoaded","src","alt","Input","isDescription","name","isMobile","standartWidth","descriptionWidth","inputProps","InputLabelProps","fontSize","InputProps","onChange","event","update","onBlur","marginTop","rows","multiline","Form","inputs","onSubmit","authorStep","titleStep","imageStep","descriptionStep","finishStep","textInputsSteps","imageInputDisplay","isLastStep","step","updateInput","final","initialInputsState","AddStory","postBarShown","setPostBarShown","setCurrentStep","inputsState","setInputsState","setError","restart","onImageChoiceHandler","useCallback","prevState","postBar","postBarContent","formError","opacity","preventDefault","onAddStory","target","eventName","_reactName","stepName","filter","onStepChangeHandler","trimmedValue","trim","test","validateControl","alignSelf","postToggleButton","App","innerWidth","clientWidth","setClientWidth","updateDimensions","addEventListener","removeEventListener","setStories","isLoading","setIsLoading","fetchStoriesHandler","fetch","json","key","data","loadedStories","reverse","addStoryHandler","method","body","JSON","stringify","Fragment","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2934692e.chunk.js","sourcesContent":["import Loader from 'react-loader-spinner';\r\nimport React from 'react';\r\nconst Spinner = () => {\r\n  return (\r\n    <Loader\r\n      type=\"Oval\"\r\n      style={{ padding: '5%' }}\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { CardContent, CardMedia, Typography } from '@material-ui/core';\nimport classes from './Story.module.css';\n\nfunction Story(props) {\n  return (\n    <Card className={props.preview ? classes.previewStory : classes.story}>\n      <CardMedia\n        className={classes.media}\n        image={props.image}\n        title={props.title}\n      />\n      <CardContent className={classes.content}>\n        <Typography gutterBottom variant=\"h2\" component=\"h2\">\n          {props.title}\n        </Typography>\n        <Typography gutterBottom variant=\"h3\" component=\"h3\">\n          By {props.author}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.description}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\nexport default Story;\n","import React from 'react';\n\nimport Story from '../Story/Story';\nimport classes from './StoriesList.module.css';\n\nconst StoriesList = (props) => {\n  return (\n    <ul className={classes['stories-list']}>\n      {props.stories.map((story) => (\n        <Story\n          key={story.id}\n          title={story.title}\n          author={story.author}\n          description={story.description}\n          image={story.image}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default StoriesList;\n","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport classes from './NavButtons.module.css';\r\nconst NavButton = (props) => {\r\n  const { isNext, error, move } = props;\r\n  return (\r\n    <div className={classes.buttonCon}>\r\n      {isNext && <span className={classes.buttonText}>Next</span>}\r\n      <Fab\r\n        color=\"primary\"\r\n        style={{ backgroundColor: error ? 'red' : null }}\r\n        onClick={() => move(isNext ? 'next' : 'back')}\r\n      >\r\n        {isNext ? <NavigateNextIcon /> : <NavigateBeforeIcon />}\r\n      </Fab>{' '}\r\n      {!isNext && <span className={classes.buttonText}>Back</span>}\r\n    </div>\r\n  );\r\n};\r\nexport default NavButton;\r\n///trim values before search img\r\n","import React from 'react';\r\nimport NavButton from './NavButton';\r\nimport classes from './NavButtons.module.css';\r\nconst NavButtons = (props) => {\r\n  const { currentStep, steps, error, onError } = props;\r\n  const moveHandler = (action) => {\r\n    function makeMove() {\r\n      const stepValue = action === 'next' ? 1 : -1;\r\n      const nextIdx = steps.indexOf(currentStep) + stepValue;\r\n      props.onStepChange(steps[nextIdx]);\r\n    }\r\n    props.onError(null);\r\n    if (action === 'next') {\r\n      let isError = props.onStepValidation(currentStep);\r\n      if (!isError) {\r\n        makeMove();\r\n      } else {\r\n        onError(isError);\r\n        setTimeout(() => {\r\n          onError(false);\r\n        }, 1500);\r\n      }\r\n    } else {\r\n      makeMove();\r\n    }\r\n    window.scrollTo(0, 0);\r\n  };\r\n  const isFirstStep = currentStep === steps[0];\r\n  const isLsatStep = currentStep === steps[steps.length - 1];\r\n  const navStyle = {\r\n    justifyContent: !isFirstStep ? 'space-between' : 'flex-end',\r\n  };\r\n\r\n  return (\r\n    <div className={classes.navigationButtons} style={navStyle}>\r\n      {!isFirstStep && (\r\n        <NavButton move={moveHandler} isNext={false} error={false} />\r\n      )}\r\n      {!isLsatStep && (\r\n        <NavButton move={moveHandler} isNext={true} error={error} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NavButtons;\r\n///trim values before search img\r\n","const regex = {\r\n  containSpecialChars: new RegExp(/[$&+,:;=?@#|'<>.^*()%!-]/),\r\n  containDigit: new RegExp(/\\d/),\r\n};\r\nexport const validateControl = (name, value) => {\r\n  let error = null;\r\n  if (name === 'image') {\r\n    if (value === null) {\r\n      error = 'Must choose an image';\r\n    }\r\n  } else {\r\n    const trimmedValue = value.trim();\r\n    switch (name) {\r\n      case 'author':\r\n        if (trimmedValue === '') {\r\n          error = 'Provide your name below';\r\n        } else if (\r\n          regex.containSpecialChars.test(trimmedValue) ||\r\n          regex.containDigit.test(trimmedValue)\r\n        ) {\r\n          error = 'Provide name without special chars or digits';\r\n        } else if (trimmedValue.length < 2) {\r\n          error = 'Name is too short.';\r\n        }\r\n        break;\r\n      case 'title':\r\n        if (trimmedValue === '') {\r\n          error = 'Provide title below';\r\n        }\r\n        break;\r\n      case 'description':\r\n        if (trimmedValue === '') {\r\n          error = 'Provide your story below.';\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  return error;\r\n};\r\n","import { createApi } from 'unsplash-js';\r\nimport { UNSPLASH_API_KEY } from './api-config';\r\nconst unsplash = createApi({\r\n  accessKey: UNSPLASH_API_KEY,\r\n});\r\n\r\nexport const getRandomImgs = async (searchTerm) => {\r\n  let result = [];\r\n  try {\r\n    const imgsData = await unsplash.search.getPhotos({\r\n      query: searchTerm,\r\n    });\r\n    imgsData.response.results.forEach((img) => {\r\n      result.push({ id: img.id, url: img.urls.regular });\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  return result;\r\n};\r\n","export const UNSPLASH_API_KEY = '0oJhi_V8eHNlNtyOLjykytXjPWxFd79JZ7FWUduq0vk';\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport classes from './ImgList.module.css';\r\nimport Spinner from '../../Spinner';\r\nimport { getRandomImgs } from '../../../api-helper';\r\nimport { Button, ImageList, ImageListItem, TextField } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nfunction ImgList(props) {\r\n  const searchRef = useRef();\r\n  const [loaded, setLoaded] = useState([]);\r\n  const [imgs, setImgs] = useState([]);\r\n  const [searchInputShown, setSearchInputShown] = useState(false);\r\n  const [onSearch, setOnSearch] = useState(false);\r\n  const { onImageChoice } = props;\r\n  const gotResults = imgs.length > 0;\r\n  const changeImgHandler = async (term) => {\r\n    setOnSearch(true);\r\n    setImgs([]);\r\n    setLoaded([]);\r\n    const imgs = await getRandomImgs(term);\r\n    setImgs(imgs);\r\n    setOnSearch(false);\r\n  };\r\n  useEffect(() => {\r\n    props.searchTerm && changeImgHandler(props.searchTerm);\r\n    onImageChoice(null);\r\n  }, [props.searchTerm, onImageChoice]);\r\n\r\n  const chooseImgHandler = (img) => {\r\n    props.onImageChoice(img);\r\n  };\r\n  const onImgLoadHandler = (id) => {\r\n    setLoaded((prevLoaded) => {\r\n      return [...prevLoaded, id];\r\n    });\r\n  };\r\n\r\n  const onSearchHandler = () => {\r\n    const searchValue = searchRef.current.value;\r\n    if (searchValue) {\r\n      changeImgHandler(searchValue);\r\n      onImageChoice(null);\r\n      setSearchInputShown(false);\r\n    }\r\n  };\r\n  const primaryButtonProps = { variant: 'contained', color: 'primary' };\r\n  const secButtonProps = { variant: 'contained', color: 'secondary' };\r\n  return (\r\n    <div className={classes.optionalImgsCon} style={{ display: props.display }}>\r\n      <div className={classes.searchBox}>\r\n        {searchInputShown && (\r\n          <TextField\r\n            inputRef={searchRef}\r\n            type=\"search\"\r\n            variant=\"outlined\"\r\n            label=\"search term..\"\r\n          />\r\n        )}\r\n        {gotResults && !searchInputShown && (\r\n          <span className={classes.imgsListText}>\r\n            Dont like this results? <br />\r\n          </span>\r\n        )}\r\n        <div className={classes.buttonCon}>\r\n          {!searchInputShown ? (\r\n            <Button\r\n              startIcon={<SearchIcon />}\r\n              {...primaryButtonProps}\r\n              onClick={() => setSearchInputShown(true)}\r\n            >\r\n              Click to search\r\n            </Button>\r\n          ) : (\r\n            <>\r\n              <Button {...primaryButtonProps} onClick={() => onSearchHandler()}>\r\n                Search\r\n              </Button>\r\n              <Button\r\n                {...secButtonProps}\r\n                onClick={() => setSearchInputShown(false)}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {gotResults ? (\r\n        <ImageList\r\n          rowHeight={props.screenWidth > 650 ? 260 : 160}\r\n          className={classes.optionalImgs}\r\n          cols={props.screenWidth > 650 ? 5 : 2}\r\n        >\r\n          {imgs.map((img) => {\r\n            const isChosen = props.chosenImg && props.chosenImg === img.id;\r\n            const imgClassName = isChosen ? classes.chosenImg : '';\r\n            return (\r\n              <ImageListItem className={imgClassName} key={img.id} cols={1}>\r\n                <img\r\n                  onClick={() => chooseImgHandler(img)}\r\n                  style={{\r\n                    display: loaded.includes(img.id) ? 'block' : 'none',\r\n                  }}\r\n                  onLoad={() => onImgLoadHandler(img.id)}\r\n                  src={img.url}\r\n                  alt={'gallery img'}\r\n                />\r\n                {!loaded.includes(img.id) && <Spinner />}\r\n              </ImageListItem>\r\n            );\r\n          })}\r\n        </ImageList>\r\n      ) : (\r\n        <span className={classes.imgsListText}>\r\n          {onSearch ? 'Searching...' : 'couldent find optional images.'}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImgList;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nconst Input = (props) => {\r\n  const isDescription = props.name === 'description';\r\n  const isMobile = props.screenWidth < 650;\r\n  const standartWidth = isMobile ? '90%' : '35%';\r\n  const descriptionWidth = isMobile ? '90%' : '50%';\r\n  const inputProps = {\r\n    InputLabelProps: { style: { fontSize: isMobile ? 15 : 22 } },\r\n    InputProps: { style: { fontSize: isMobile ? 25 : 45 } },\r\n    value: props.value,\r\n    type: 'text',\r\n    variant: 'filled',\r\n    label: props.label,\r\n    onChange: (event) => props.update(props.name, event),\r\n    onBlur: (event) => props.update(props.name, event),\r\n    style: {\r\n      marginTop: isMobile ? '10%' : '1%',\r\n      width: isDescription ? descriptionWidth : standartWidth,\r\n      display: props.current === props.name ? 'flex' : 'none',\r\n    },\r\n    rows: isDescription ? 5 : 1,\r\n  };\r\n  return isDescription ? (\r\n    <TextField {...inputProps} multiline />\r\n  ) : (\r\n    <TextField {...inputProps} />\r\n  );\r\n};\r\nexport default Input;\r\n///trim values before search img\r\n","import React from 'react';\r\nimport ImgList from '../ImgList/ImgList';\r\nimport Input from './Input';\r\nimport Story from '../../Story/Story';\r\nimport Button from '@material-ui/core/Button';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\n\r\nconst Form = (props) => {\r\n  const { currentStep, inputs, steps, onSubmit } = props;\r\n  const [authorStep, titleStep, imageStep, descriptionStep, finishStep] = steps;\r\n  const textInputsSteps = [authorStep, titleStep, descriptionStep];\r\n  const imageInputDisplay = currentStep === imageStep.name ? 'block' : 'none';\r\n  const isLastStep = currentStep === finishStep.name;\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      {textInputsSteps.map((step) => {\r\n        return (\r\n          <Input\r\n            key={step.name}\r\n            name={step.name}\r\n            current={currentStep}\r\n            label={step.label}\r\n            screenWidth={props.screenWidth}\r\n            update={props.updateInput}\r\n            value={inputs[step.name].current}\r\n          />\r\n        );\r\n      })}\r\n      <ImgList\r\n        display={imageInputDisplay}\r\n        chosenImg={inputs.image ? inputs.image.id : null}\r\n        onImageChoice={props.onImageChoice}\r\n        searchTerm={inputs.title.final}\r\n        screenWidth={props.screenWidth}\r\n      />\r\n      {isLastStep && (\r\n        <>\r\n          <Button\r\n            startIcon={<ThumbUpIcon />}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n            Sure, Post It!\r\n          </Button>\r\n          <Story\r\n            preview={true}\r\n            title={inputs.title.final}\r\n            author={inputs.author.final}\r\n            description={inputs.description.final}\r\n            image={inputs.image.url}\r\n          />\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default Form;\r\n","import React, { useCallback, useState } from 'react';\nimport classes from './AddStory.module.css';\nimport NavButtons from './NavButtons/NavButtons';\nimport { validateControl } from './control-validation';\nimport Button from '@material-ui/core/Button';\nimport Form from './Form/Form';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst initialInputsState = {\n  author: { current: '', final: null },\n  title: { current: '', final: null },\n  image: { url: null, id: null },\n  description: { current: '', final: null },\n};\nfunction AddStory(props) {\n  //prettier-ignore\n  const steps = [\n    { name: 'author', title: 'Who are you?',label:\"Your name\" },\n    { name: 'title', title: 'What is your story name?',label: 'Story title'  },\n    { name: 'image', title: 'Which image describes it the most?' },\n    { name: 'description', title: 'So,what happen?', label: 'Your story' },\n    { name: 'finish', title: 'Is that OK?' },\n  ];\n  const [postBarShown, setPostBarShown] = useState(false);\n  const [currentStep, setCurrentStep] = useState(steps[0]);\n  const [inputsState, setInputsState] = useState(initialInputsState);\n  const [error, setError] = useState(null);\n  function submitHandler(event) {\n    event.preventDefault();\n    const story = {\n      author: inputsState.author.final,\n      title: inputsState.title.final,\n      description: inputsState.description.final,\n      image: inputsState.image.url,\n    };\n    props.onAddStory(story);\n    restart();\n  }\n  const restart = () => {\n    setInputsState(initialInputsState);\n    setCurrentStep(steps[0]);\n    setPostBarShown(false);\n  };\n\n  const onImageChoiceHandler = useCallback((img) => {\n    setInputsState((prevState) => {\n      return {\n        ...prevState,\n        image: img,\n      };\n    });\n  }, []);\n\n  const updateInputHandler = (name, event) => {\n    let value = event.target.value;\n    let eventName = event._reactName;\n    setInputsState((prevState) => {\n      let update;\n      if (eventName === 'onChange') {\n        update = { ...prevState[name], current: value };\n      } else if (eventName === 'onBlur') {\n        update = { ...prevState[name], final: value };\n      }\n      return {\n        ...prevState,\n        [name]: update,\n      };\n    });\n    setError(null);\n  };\n  const togglePostBarHandler = () => {\n    postBarShown ? restart() : setPostBarShown((prevState) => !prevState);\n  };\n  const onStepChangeHandler = (stepName) => {\n    const step = steps.filter((step) => step.name === stepName)[0];\n    setCurrentStep(step);\n  };\n  const onStepValidationHandler = (name) => {\n    const checkValue =\n      name === 'image' ? inputsState.image : inputsState[name].current;\n    let result = validateControl(name, checkValue);\n    return result;\n  };\n  return (\n    <div className={classes.postBar}>\n      {postBarShown && (\n        <div className={classes.postBarContent}>\n          <h2>{currentStep.title}</h2>\n          <div className={classes.formError} style={{ opacity: error ? 1 : 0 }}>\n            {error}\n          </div>\n\n          <Form\n            currentStep={currentStep.name}\n            inputs={inputsState}\n            steps={steps}\n            onSubmit={submitHandler}\n            updateInput={updateInputHandler}\n            onImageChoice={onImageChoiceHandler}\n            screenWidth={props.screenWidth}\n          />\n          <NavButtons\n            currentStep={currentStep.name}\n            steps={steps.map((step) => step.name)}\n            onStepChange={(stepName) => onStepChangeHandler(stepName)}\n            onStepValidation={onStepValidationHandler}\n            onError={setError}\n            error={error}\n          />\n        </div>\n      )}\n\n      <Button\n        style={{ alignSelf: postBarShown ? 'flex-start ' : 'center' }}\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.postToggleButton}\n        onClick={togglePostBarHandler}\n        startIcon={!postBarShown ? <WhatshotIcon /> : <CloseIcon />}\n      >\n        {!postBarShown ? 'Post your story' : 'Cancel'}\n      </Button>\n    </div>\n  );\n}\nexport default AddStory;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport Spinner from './components/Spinner';\nimport StoriesList from './components/StoriesList/StoriesList';\nimport AddStory from './components/AddStory/AddStory';\nimport './App.css';\nfunction App() {\n  const [clientWidth, setClientWidth] = useState(window.innerWidth);\n  const updateDimensions = () => {\n    setClientWidth(window.innerWidth);\n  };\n  useEffect(() => {\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  const [stories, setStories] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  let content;\n  const fetchStoriesHandler = useCallback(async () => {\n    setError(null);\n    setIsLoading(true);\n    try {\n      const response = await fetch(\n        'https://react-http-de690-default-rtdb.firebaseio.com/stories.json'\n      );\n\n      const data = await response.json();\n      let loadedStories = [];\n      for (const key in data) {\n        let story = data[key];\n        loadedStories.push({ id: key, ...story });\n      }\n\n      setStories(loadedStories.reverse());\n    } catch (error) {\n      setError('Failed to reach the server');\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchStoriesHandler();\n  }, [fetchStoriesHandler]);\n\n  const addStoryHandler = async (story) => {\n    try {\n      await fetch(\n        'https://react-http-de690-default-rtdb.firebaseio.com/stories.json',\n        {\n          method: 'POST',\n          body: JSON.stringify(story),\n          'Content-Type': 'application/json',\n        }\n      );\n\n      fetchStoriesHandler();\n    } catch (error) {\n      setError('Failed to save movie on server');\n    }\n  };\n  if (stories.length > 0) {\n    content = (\n      <>\n        <h2>Users Stories</h2>\n        <StoriesList stories={stories} />\n      </>\n    );\n  }\n  if (stories.length === 0) {\n    content = <p>Wall is empty!</p>;\n  }\n  if (error) {\n    content = <p>{error}</p>;\n  }\n  if (isLoading) {\n    content = <Spinner />;\n  }\n  return (\n    <React.Fragment>\n      <section>\n        <h1>Wall to all </h1>\n      </section>\n      <section>\n        <AddStory screenWidth={clientWidth} onAddStory={addStoryHandler} />\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionalImgsCon\":\"ImgList_optionalImgsCon__2YE6M\",\"optionalImgs\":\"ImgList_optionalImgs__3mtgb\",\"chosenImg\":\"ImgList_chosenImg__19cJS\",\"searchBox\":\"ImgList_searchBox__3OGjD\",\"buttonCon\":\"ImgList_buttonCon__2C0oN\",\"imgsListText\":\"ImgList_imgsListText__xSB2_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationButtons\":\"NavButtons_navigationButtons__1uNHt\",\"buttonCon\":\"NavButtons_buttonCon__1i5A0\",\"buttonText\":\"NavButtons_buttonText__3nZW1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"story\":\"Story_story__1bVPs\",\"previewStory\":\"Story_previewStory__3Yfo_\",\"content\":\"Story_content__vwEig\",\"media\":\"Story_media__VHaO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formError\":\"AddStory_formError__1riru\",\"postToggleButton\":\"AddStory_postToggleButton__9NIuE\",\"postBar\":\"AddStory_postBar__218Sl\",\"postBarContent\":\"AddStory_postBarContent__2KZHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stories-list\":\"StoriesList_stories-list__2_DO6\"};"],"sourceRoot":""}