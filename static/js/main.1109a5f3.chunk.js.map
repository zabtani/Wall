{"version":3,"sources":["components/Spinner.js","components/Story/Story.js","components/StoriesList/StoriesList.js","api-helper.js","api-config.js","components/AddStory/ImgList/ImgList.js","components/AddStory/control-validation.js","components/AddStory/Input/Input.js","components/AddStory/NavButtons/NavButtons.js","components/AddStory/AddStory.js","App.js","index.js","components/AddStory/ImgList/ImgList.module.css","components/AddStory/AddStory.module.css","components/Story/Story.module.css","components/StoriesList/StoriesList.module.css","components/AddStory/NavButtons/NavButtons.module.css"],"names":["Spinner","type","style","padding","color","height","width","Story","props","Card","className","preview","classes","previewStory","story","CardMedia","media","image","title","CardContent","content","Typography","gutterBottom","variant","component","author","description","StoriesList","stories","map","id","unsplash","createApi","accessKey","getRandomImgs","searchTerm","a","result","search","getPhotos","query","response","results","forEach","img","push","url","urls","regular","console","log","ImgList","searchRef","useRef","useState","loaded","setLoaded","imgs","setImgs","searchInputShown","setSearchInputShown","onSearch","setOnSearch","onImageChoice","changeImgHandler","term","useEffect","primaryButtonProps","optionalImgsCon","display","searchBox","TextField","inputRef","label","searchBoxText","buttonCon","Button","onClick","current","value","length","ImageList","rowHeight","optionalImgs","cols","screenWidth","imgClassName","chosenImg","ImageListItem","chooseImgHandler","includes","onLoad","prevLoaded","src","alt","regex","containSpecialChars","RegExp","containDigit","Input","React","forwardRef","ref","isDescription","name","isMobile","inputProps","onChange","marginTop","rows","multiline","NavButtons","currentStep","finishStep","error","moveControl","navigationButtons","justifyContent","Fab","backgroundColor","initialInputsState","AddStory","steps","authorStep","titleStep","imageStep","descriptionStep","postBarShown","setPostBarShown","setCurrentStep","inputsState","setInputsState","setError","restart","onImageChoiceHandler","useCallback","prevState","textInputsSteps","imageInputDisplay","postBarContent","alignSelf","postToggleButton","postBar","formError","opacity","onSubmit","event","preventDefault","onAddStory","action","makeMove","stepValue","nextControlIdx","step","indexOf","checkValue","isError","trimmedValue","trim","test","validateControl","e","target","clickToSearch","App","window","innerWidth","clientWidth","setClientWidth","updateDimensions","addEventListener","removeEventListener","setStories","isLoading","setIsLoading","fetchStoriesHandler","fetch","json","key","data","loadedStories","addStoryHandler","method","body","JSON","stringify","Fragment","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1109a5f3.chunk.js","sourcesContent":["import Loader from 'react-loader-spinner';\r\nimport React from 'react';\r\nconst Spinner = () => {\r\n  return (\r\n    <Loader\r\n      type=\"Oval\"\r\n      style={{ padding: '5%' }}\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { CardContent, CardMedia, Typography } from '@material-ui/core';\nimport classes from './Story.module.css';\n\nfunction Story(props) {\n  return (\n    <Card className={props.preview ? classes.previewStory : classes.story}>\n      <CardMedia\n        className={classes.media}\n        image={props.image}\n        title={props.title}\n      />\n      <CardContent className={classes.content}>\n        <Typography gutterBottom variant=\"h2\" component=\"h2\">\n          {props.title}\n        </Typography>\n        <Typography gutterBottom variant=\"h3\" component=\"h3\">\n          By {props.author}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.description}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\nexport default Story;\n","import React from 'react';\n\nimport Story from '../Story/Story';\nimport classes from './StoriesList.module.css';\n\nconst StoriesList = (props) => {\n  return (\n    <ul className={classes['stories-list']}>\n      {props.stories.map((story) => (\n        <Story\n          key={story.id}\n          title={story.title}\n          author={story.author}\n          description={story.description}\n          image={story.image}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default StoriesList;\n","import { createApi } from 'unsplash-js';\r\nimport { UNSPLASH_API_KEY } from './api-config';\r\nconst unsplash = createApi({\r\n  accessKey: UNSPLASH_API_KEY,\r\n});\r\n\r\nexport const getRandomImgs = async (searchTerm) => {\r\n  let result = [];\r\n  try {\r\n    const imgsData = await unsplash.search.getPhotos({\r\n      query: searchTerm,\r\n    });\r\n    imgsData.response.results.forEach((img) => {\r\n      result.push({ id: img.id, url: img.urls.regular });\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  return result;\r\n};\r\n","export const UNSPLASH_API_KEY = '0oJhi_V8eHNlNtyOLjykytXjPWxFd79JZ7FWUduq0vk';\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport classes from './ImgList.module.css';\r\nimport Spinner from '../../Spinner';\r\nimport { getRandomImgs } from '../../../api-helper';\r\nimport { Button, ImageList, ImageListItem, TextField } from '@material-ui/core';\r\n\r\nfunction ImgList(props) {\r\n  const searchRef = useRef();\r\n  const [loaded, setLoaded] = useState([]);\r\n  const [imgs, setImgs] = useState([]);\r\n  const [searchInputShown, setSearchInputShown] = useState(false);\r\n  const [onSearch, setOnSearch] = useState(false);\r\n  const { onImageChoice } = props;\r\n  const changeImgHandler = async (term) => {\r\n    setOnSearch(true);\r\n    setImgs([]);\r\n    setLoaded([]);\r\n    const imgs = await getRandomImgs(term);\r\n    setImgs(imgs);\r\n    setOnSearch(false);\r\n  };\r\n  useEffect(() => {\r\n    props.searchTerm && changeImgHandler(props.searchTerm);\r\n    onImageChoice(null);\r\n  }, [props.searchTerm, onImageChoice]);\r\n\r\n  const chooseImgHandler = (img) => {\r\n    props.onImageChoice(img);\r\n  };\r\n  const onImgLoadHandler = (id) => {\r\n    setLoaded((prevLoaded) => {\r\n      return [...prevLoaded, id];\r\n    });\r\n  };\r\n\r\n  const onSearchHandler = () => {\r\n    changeImgHandler(searchRef.current.value);\r\n    setSearchInputShown(false);\r\n  };\r\n  const primaryButtonProps = { variant: 'contained', color: 'primary' };\r\n  const secButtonProps = { variant: 'contained', color: 'secondary' };\r\n  return (\r\n    <div className={classes.optionalImgsCon} style={{ display: props.display }}>\r\n      <div className={classes.searchBox}>\r\n        {searchInputShown ? (\r\n          <TextField\r\n            inputRef={searchRef}\r\n            variant=\"outlined\"\r\n            label=\"search term..\"\r\n          />\r\n        ) : (\r\n          <span className={classes.searchBoxText}>\r\n            results based on title. donts like it? <br />\r\n          </span>\r\n        )}\r\n        <div className={classes.buttonCon}>\r\n          {!searchInputShown ? (\r\n            <Button\r\n              {...primaryButtonProps}\r\n              onClick={() => setSearchInputShown(true)}\r\n            >\r\n              click to search\r\n            </Button>\r\n          ) : (\r\n            <>\r\n              <Button {...primaryButtonProps} onClick={() => onSearchHandler()}>\r\n                search\r\n              </Button>\r\n              <Button\r\n                {...secButtonProps}\r\n                onClick={() => setSearchInputShown(false)}\r\n              >\r\n                cancel\r\n              </Button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {imgs.length > 0 ? (\r\n        <ImageList\r\n          rowHeight={160}\r\n          className={classes.optionalImgs}\r\n          cols={props.screenWidth > 650 ? 5 : 2}\r\n        >\r\n          {imgs.map((img) => {\r\n            const isChosen = props.chosenImg && props.chosenImg === img.id;\r\n            const imgClassName = isChosen ? classes.chosenImg : '';\r\n            return (\r\n              <ImageListItem className={imgClassName} key={img.id} cols={1}>\r\n                <img\r\n                  onClick={() => chooseImgHandler(img)}\r\n                  style={{\r\n                    display: loaded.includes(img.id) ? 'block' : 'none',\r\n                  }}\r\n                  onLoad={() => onImgLoadHandler(img.id)}\r\n                  src={img.url}\r\n                  alt={'gallery img'}\r\n                />\r\n                {!loaded.includes(img.id) && <Spinner />}\r\n              </ImageListItem>\r\n            );\r\n          })}\r\n        </ImageList>\r\n      ) : onSearch ? (\r\n        'searching'\r\n      ) : (\r\n        'couldent find optional images for your story title.'\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImgList;\r\n","const regex = {\r\n  containSpecialChars: new RegExp(/[$&+,:;=?@#|'<>.^*()%!-]/),\r\n  containDigit: new RegExp(/\\d/),\r\n};\r\nexport const validateControl = (name, value) => {\r\n  let error = null;\r\n  if (name === 'image') {\r\n    if (value === null) {\r\n      error = 'must choose an image';\r\n    }\r\n  } else {\r\n    const trimmedValue = value.trim();\r\n    switch (name) {\r\n      case 'author':\r\n        if (trimmedValue === '') {\r\n          error = 'provide your name above.';\r\n        } else if (\r\n          regex.containSpecialChars.test(trimmedValue) ||\r\n          regex.containDigit.test(trimmedValue)\r\n        ) {\r\n          error = 'provide name with out spiceal chars or digits';\r\n        } else if (trimmedValue.length < 2) {\r\n          error = 'this name is too short.';\r\n        }\r\n        break;\r\n      case 'title':\r\n        if (trimmedValue === '') {\r\n          error = 'provide your title above.';\r\n        }\r\n        break;\r\n      case 'description':\r\n        if (trimmedValue === '') {\r\n          error = 'provide your description above.';\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  return error;\r\n};\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n  const isDescription = props.name === 'description';\r\n  const isMobile = props.screenWidth < 650;\r\n  const inputProps = {\r\n    value: props.value,\r\n    type: 'text',\r\n    variant: 'outlined',\r\n    label: props.label,\r\n\r\n    onChange: props.onChange,\r\n    style: {\r\n      marginTop: isMobile ? '10%' : '1%',\r\n      width: isMobile ? '80%' : '35%',\r\n      display: props.current === props.name ? 'flex' : 'none',\r\n    },\r\n    rows: isDescription ? 5 : 1,\r\n  };\r\n  return isDescription ? (\r\n    <TextField {...inputProps} multiline />\r\n  ) : (\r\n    <TextField {...inputProps} />\r\n  );\r\n});\r\nexport default Input;\r\n///trim values before search img\r\n","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport classes from './NavButtons.module.css';\r\nconst NavButtons = (props) => {\r\n  const { currentStep, finishStep, error, moveControl } = props;\r\n  return (\r\n    <div\r\n      className={classes.navigationButtons}\r\n      style={{\r\n        justifyContent: currentStep !== 'author' ? 'space-between' : 'flex-end',\r\n      }}\r\n    >\r\n      {currentStep !== 'author' && (\r\n        <span>\r\n          <Fab color=\"primary\" onClick={() => moveControl('back')}>\r\n            <NavigateBeforeIcon />\r\n          </Fab>{' '}\r\n          Back{' '}\r\n        </span>\r\n      )}\r\n      {currentStep !== finishStep && (\r\n        <span>\r\n          Next{' '}\r\n          <Fab\r\n            color=\"primary\"\r\n            style={{ backgroundColor: error ? 'red' : null }}\r\n            onClick={() => moveControl('next')}\r\n          >\r\n            <NavigateNextIcon />\r\n          </Fab>\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NavButtons;\r\n///trim values before search img\r\n","import React, { useCallback, useState } from 'react';\nimport classes from './AddStory.module.css';\nimport ImgList from './ImgList/ImgList';\nimport Button from '@material-ui/core/Button';\nimport { validateControl } from './control-validation';\nimport Input from './Input/Input';\nimport NavButtons from './NavButtons/NavButtons';\nimport Story from '../Story/Story';\nconst initialInputsState = {\n  author: '',\n  title: '',\n  image: { url: null, id: null },\n  description: '',\n};\nfunction AddStory(props) {\n  const steps = [\n    //prettier-ignore\n    { name: 'author', title: 'Who are you?',label:\"Name goes here...\"  },\n    //prettier-ignore\n    { name: 'title', title: 'What is your story name?',label: 'Title goes here...'  },\n    { name: 'image', title: 'Which image describe it the most?' },\n    //prettier-ignore\n    { name: 'description', title: 'So,what happen?', label: 'Story goes here...' },\n    { name: 'finish', title: 'Is that OK?' },\n  ];\n  const [authorStep, titleStep, imageStep, descriptionStep, finishStep] = steps;\n  const [postBarShown, setPostBarShown] = useState(false);\n  const [currentStep, setCurrentStep] = useState(authorStep);\n  const [inputsState, setInputsState] = useState(initialInputsState);\n\n  const [error, setError] = useState(null);\n  function submitHandler(event) {\n    event.preventDefault();\n    const story = {\n      author: inputsState.author,\n      title: inputsState.title,\n      description: inputsState.description,\n      image: inputsState.image.url,\n    };\n    props.onAddStory(story);\n    restart();\n  }\n  const restart = () => {\n    setInputsState(initialInputsState);\n    setCurrentStep(authorStep);\n  };\n  const moveControlHandler = (action) => {\n    function makeMove() {\n      const stepValue = action === 'next' ? 1 : -1;\n      const nextControlIdx =\n        steps.map((step) => step.name).indexOf(currentStep.name) + stepValue;\n      setCurrentStep(steps[nextControlIdx]);\n    }\n    setError(null);\n    if (action === 'next') {\n      const checkValue = inputsState[currentStep.name];\n      let isError = validateControl(currentStep.name, checkValue);\n      !isError ? makeMove() : setError(isError);\n    } else {\n      makeMove();\n    }\n  };\n  const onImageChoiceHandler = useCallback((img) => {\n    setInputsState((prevState) => {\n      return {\n        ...prevState,\n        image: img,\n      };\n    });\n  }, []);\n\n  const textInputsSteps = [authorStep, titleStep, descriptionStep];\n  const imageInputDisplay =\n    currentStep.name === imageStep.name ? 'block' : 'none';\n\n  const inputChangeHandler = (name, value) => {\n    setInputsState((prevState) => {\n      return { ...prevState, [name]: value };\n    });\n    setError(null);\n  };\n  return (\n    <div className={classes.postBarContent}>\n      <Button\n        style={{ alignSelf: postBarShown ? 'flex-start ' : 'center' }}\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.postToggleButton}\n        onClick={() => setPostBarShown(!postBarShown)}\n      >\n        {!postBarShown ? 'post your story!' : 'fold'}\n      </Button>\n      {postBarShown && (\n        <div className={classes.postBar}>\n          <h2>{currentStep.title}</h2>\n          <div className={classes.formError} style={{ opacity: error ? 1 : 0 }}>\n            {error}\n          </div>\n\n          <form onSubmit={submitHandler}>\n            <NavButtons\n              currentStep={currentStep.name}\n              finishStep={finishStep.name}\n              moveControl={moveControlHandler}\n              error={error}\n            />\n            {textInputsSteps.map((step) => {\n              return (\n                <Input\n                  key={step.name}\n                  name={step.name}\n                  current={currentStep.name}\n                  label={step.label}\n                  screenWidth={props.screenWidth}\n                  onChange={(e) =>\n                    inputChangeHandler(step.name, e.target.value)\n                  }\n                  value={inputsState[step.name]}\n                />\n              );\n            })}\n            <ImgList\n              display={imageInputDisplay}\n              chosenImg={inputsState.image ? inputsState.image.id : null}\n              onImageChoice={onImageChoiceHandler}\n              searchTerm={inputsState.title}\n              screenWidth={props.screenWidth}\n            />\n            {currentStep.name === finishStep.name && (\n              <>\n                <Story\n                  preview={true}\n                  title={inputsState.title}\n                  author={inputsState.author}\n                  description={inputsState.description}\n                  image={inputsState.image.url}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  className={classes.clickToSearch}\n                >\n                  Looks good. Post It!\n                </Button>\n              </>\n            )}\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\nexport default AddStory;\n///trim values before search img\n","import React, { useState, useCallback, useEffect } from 'react';\nimport Spinner from './components/Spinner';\nimport StoriesList from './components/StoriesList/StoriesList';\nimport AddStory from './components/AddStory/AddStory';\nimport {} from './api-helper';\nimport './App.css';\nfunction App() {\n  const [clientWidth, setClientWidth] = useState(window.innerWidth);\n  const updateDimensions = () => {\n    setClientWidth(window.innerWidth);\n  };\n  useEffect(() => {\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  const [stories, setStories] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  let content;\n  const fetchStoriesHandler = useCallback(async () => {\n    setError(null);\n    setIsLoading(true);\n    try {\n      const response = await fetch(\n        'https://react-http-de690-default-rtdb.firebaseio.com/stories.json'\n      );\n\n      const data = await response.json();\n      let loadedStories = [];\n      for (const key in data) {\n        let story = data[key];\n        loadedStories.push({ id: key, ...story });\n      }\n      setStories(loadedStories);\n    } catch (error) {\n      setError('Failed to reach the server');\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchStoriesHandler();\n  }, [fetchStoriesHandler]);\n\n  const addStoryHandler = async (story) => {\n    try {\n      await fetch(\n        'https://react-http-de690-default-rtdb.firebaseio.com/stories.json',\n        {\n          method: 'POST',\n          body: JSON.stringify(story),\n          'Content-Type': 'application/json',\n        }\n      );\n\n      fetchStoriesHandler();\n    } catch (error) {\n      setError('Failed to save movie on server');\n    }\n  };\n  if (stories.length > 0) {\n    content = <StoriesList stories={stories} />;\n  }\n  if (stories.length === 0) {\n    content = <p>No stories...</p>;\n  }\n  if (error) {\n    content = <p>{error}</p>;\n  }\n  if (isLoading) {\n    content = <Spinner />;\n  }\n  return (\n    <React.Fragment>\n      <section>\n        <h1>Wall to all (: </h1>\n      </section>\n\n      <section>\n        <AddStory screenWidth={clientWidth} onAddStory={addStoryHandler} />\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionalImgsCon\":\"ImgList_optionalImgsCon__2YE6M\",\"optionalImgs\":\"ImgList_optionalImgs__3mtgb\",\"chosenImg\":\"ImgList_chosenImg__19cJS\",\"searchBox\":\"ImgList_searchBox__3OGjD\",\"buttonCon\":\"ImgList_buttonCon__2C0oN\",\"searchBoxText\":\"ImgList_searchBoxText__2X90j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formError\":\"AddStory_formError__1riru\",\"postToggleButton\":\"AddStory_postToggleButton__9NIuE\",\"postBarContent\":\"AddStory_postBarContent__2KZHL\",\"postBar\":\"AddStory_postBar__218Sl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"story\":\"Story_story__1bVPs\",\"previewStory\":\"Story_previewStory__3Yfo_\",\"content\":\"Story_content__vwEig\",\"media\":\"Story_media__VHaO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stories-list\":\"StoriesList_stories-list__2_DO6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationButtons\":\"NavButtons_navigationButtons__1uNHt\"};"],"sourceRoot":""}